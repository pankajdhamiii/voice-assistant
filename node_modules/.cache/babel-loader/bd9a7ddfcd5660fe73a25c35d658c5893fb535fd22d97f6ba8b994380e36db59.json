{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\OneDrive\\\\Desktop\\\\voice assistant\\\\voice-assistance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport useClipboard from \"react-use-clipboard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [textToCopy, setTextToCopy] = useState();\n  const [isCopied, setCopied] = useClipboard(textToCopy);\n  const startListening = () => SpeechRecognition.startListening({\n    continuous: true,\n    language: \"en-IN\"\n  });\n  const {\n    transcript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Voice Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"everything you speak will display here.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          onClick: () => setTextToCopy(transcript),\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setCopied,\n            children: isCopied ? \"copied\" : \"copy to clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startListening,\n            children: \"start speaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: SpeechRecognition.stopListening,\n            children: \"stop speaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"+1tJl1nqZLHOV0yPIoWYt90DaPg=\", false, function () {\n  return [useClipboard, useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","useClipboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","textToCopy","setTextToCopy","isCopied","setCopied","startListening","continuous","language","transcript","browserSupportsSpeechRecognition","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stopListening","_c","$RefreshReg$"],"sources":["C:/Users/acer/OneDrive/Desktop/voice assistant/voice-assistance/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport SpeechRecognition, {useSpeechRecognition} from \"react-speech-recognition\";\nimport useClipboard from \"react-use-clipboard\";\nimport \"./App.css\";\n\nconst App = () => {\n\n  const [textToCopy,setTextToCopy]=useState()\n  const [isCopied, setCopied] = useClipboard(textToCopy);\n  const startListening= ()=>SpeechRecognition.startListening({ continuous: true, language: \"en-IN\" });\n  const { transcript, browserSupportsSpeechRecognition } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"main\">\n        <h1>Voice Assistant</h1>\n        <p>everything you speak will display here.......</p>\n        <div className=\"box\">\n          <div className=\"main-content\" onClick={()=>setTextToCopy(transcript)}>{transcript}</div>\n          <div className=\"button\">\n            <button onClick={setCopied}>\n              {isCopied ? \"copied\" : \"copy to clipboard\"}\n            </button>\n            <button onClick={startListening}>start speaking</button>\n            <button onClick={SpeechRecognition.stopListening}>stop speaking</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IAAGC,oBAAoB,QAAO,0BAA0B;AAChF,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,CAAC;EAC3C,MAAM,CAACY,QAAQ,EAAEC,SAAS,CAAC,GAAGV,YAAY,CAACO,UAAU,CAAC;EACtD,MAAMI,cAAc,GAAEA,CAAA,KAAIb,iBAAiB,CAACa,cAAc,CAAC;IAAEC,UAAU,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CAAC;EACnG,MAAM;IAAEC,UAAU;IAAEC;EAAiC,CAAC,GAAGhB,oBAAoB,CAAC,CAAC;EAE/E,IAAI,CAACgB,gCAAgC,EAAE;IACrC,OAAO,IAAI;EACb;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBd,OAAA;QAAAc,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBnB,OAAA;QAAAc,QAAA,EAAG;MAA6C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpDnB,OAAA;QAAKe,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBd,OAAA;UAAKe,SAAS,EAAC,cAAc;UAACK,OAAO,EAAEA,CAAA,KAAId,aAAa,CAACM,UAAU,CAAE;UAAAE,QAAA,EAAEF;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxFnB,OAAA;UAAKe,SAAS,EAAC,QAAQ;UAAAD,QAAA,gBACrBd,OAAA;YAAQoB,OAAO,EAAEZ,SAAU;YAAAM,QAAA,EACxBP,QAAQ,GAAG,QAAQ,GAAG;UAAmB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACTnB,OAAA;YAAQoB,OAAO,EAAEX,cAAe;YAAAK,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDnB,OAAA;YAAQoB,OAAO,EAAExB,iBAAiB,CAACyB,aAAc;YAAAP,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACf,EAAA,CA7BID,GAAG;EAAA,QAGuBL,YAAY,EAEeD,oBAAoB;AAAA;AAAAyB,EAAA,GALzEnB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}